version: '3.3'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /certs:/etc/nginx/certs:ro
      - /vhostd:/etc/nginx/vhost.d
      - /html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /certs:/etc/nginx/certs:rw
      - /vhostd:/etc/nginx/vhost.d
      - /html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    expose:
      - 80
    links:
      - backend
      - frontend
      - nginx-proxy
      - letsencrypt
    environment:
      - VIRTUAL_HOST=aventuradewernick.cfd
      - LETSENCRYPT_HOST=aventuradewernick.cfd

  backend:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./backend
    ports:
      - '3004:3004'
    volumes:
      - /mnt/volumen_datos/data/backend:/app  # Monta el directorio del backend en el contenedor

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend/
    ports:
      - '3005:3000'
    volumes:
      - /mnt/volumen_datos/data/frontend:/app  # Monta el directorio del frontend en el contenedor
    links:
      - backend
volumes:
    certs:
    html:
    vhost: