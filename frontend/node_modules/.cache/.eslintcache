[{"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js":"1","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js":"2","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js":"3","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js":"4","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js":"5","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js":"6","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js":"7","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js":"8","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js":"9","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js":"10","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\game2Service.js":"11"},{"size":463,"mtime":1697908530990,"results":"12","hashOfConfig":"13"},{"size":1106,"mtime":1697927890254,"results":"14","hashOfConfig":"13"},{"size":5229,"mtime":1697908530923,"results":"15","hashOfConfig":"13"},{"size":5371,"mtime":1697908530955,"results":"16","hashOfConfig":"13"},{"size":3043,"mtime":1697908530939,"results":"17","hashOfConfig":"13"},{"size":5427,"mtime":1697908530955,"results":"18","hashOfConfig":"13"},{"size":480,"mtime":1697908530939,"results":"19","hashOfConfig":"13"},{"size":2578,"mtime":1697908530990,"results":"20","hashOfConfig":"13"},{"size":6958,"mtime":1697924117773,"results":"21","hashOfConfig":"13"},{"size":3076,"mtime":1697934628412,"results":"22","hashOfConfig":"13"},{"size":13024,"mtime":1697926866538,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"z7pusm",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js",["65","66","67","68","69"],[],"import './App.css';\r\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { AuthContext } from './Context/AuthContext';\r\nimport Login from './Pages/Login';\r\nimport Register from './Pages/Register';\r\nimport ForgetPassword from './Pages/ForgetPassword';\r\nimport Games from './Pages/Games/Games';\r\nimport Game1  from './Pages/Games/game1/Game1';\r\nimport Game2  from './Pages/Games/game2/Game2';\r\nfunction App() {\r\n\r\n\r\n  const { user } = useContext(AuthContext);\r\n  //const navigate = useNavigate();\r\n\r\n  /*useEffect(() => {\r\n    if (!user) {\r\n      navigate('/');\r\n    }\r\n  }, [user]);*/\r\n\r\n\r\n  return (\r\n\r\n    <Routes>\r\n      <Route index element={<Login />} />\r\n      <Route path='/register' element={<Register />} />\r\n      <Route path='/forgot-password' element={<ForgetPassword />} />\r\n      <Route path='/games' element={<Games />} />\r\n      <Route path='/games/game1' element={<Game1  />} />\r\n      <Route path='/games/game2' element={<Game2  />} />\r\n    </Routes>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js",["70"],[],"import React, { createContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst getUserFromStorage = () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n};\r\n\r\nconst setUserToStorage = (user) => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(getUserFromStorage());\r\n    const [error, setError] = useState('');\r\n    const navigator = useNavigate();\r\n\r\n    const getUser = async () => {\r\n\r\n        await api.get('/user/' + user.id).then(res => {\r\n            if (res.status === 200) {\r\n                return res.data.user;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await api.post('/user/token', {\r\n                token: localStorage.getItem('refreshToken'),\r\n            });\r\n            localStorage.removeItem(\"user-token\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n\r\n            const { token, refreshToken } = response.data;\r\n\r\n            localStorage.setItem('user-token', token);\r\n            localStorage.setItem(\"refreshToken\", refreshToken)\r\n\r\n            const userNew = await getUser();\r\n\r\n            setUser({\r\n                ...user,\r\n                permisos: user.permisos,\r\n                token: token,\r\n                refreshToken: refreshToken,\r\n            });\r\n\r\n            setUserToStorage({\r\n                ...user,\r\n                token: token,\r\n                permisos: userNew?.permisos,\r\n                refreshToken: refreshToken,\r\n            });\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                logout();\r\n            }\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user && user.refreshToken) {\r\n            const refreshTokenInterval = setInterval(refreshToken, 3 * 60 * 1000); // Actualizar el token cada 15 minutos\r\n            return () => {\r\n                clearInterval(refreshTokenInterval);\r\n            };\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        setUserToStorage(user);\r\n    }, [user]);\r\n\r\n    const login = async (values) => {\r\n        try {\r\n            const response = await api.post('/user/login', values);\r\n            console.log(\"responmse\", response.data)\r\n            if (response.status === 200) {\r\n                setUser(response.data);\r\n                setUserToStorage(response.data);\r\n                localStorage.setItem('user-token', response.data.token);\r\n                localStorage.setItem(\"refreshToken\", response.data.refreshToken)\r\n                localStorage.setItem(\"role\", response.data.role)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                    title: \"Bienvenido!!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                navigator(\"/local\")\r\n            } else {\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n\r\n                setError(error.response.data.message);\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                setError('Ocurrió un error al iniciar sesión.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await api.post('/user/logout', { refreshToken: user.refreshToken });\r\n            console.log(res);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"user-token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.removeItem(\"role\");\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                user,\r\n                error,\r\n                login,\r\n                logout,\r\n                getUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js",["71","72","73","74","75","76"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\n\r\nexport default function Register() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Registrate</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo y una contraseña</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Registrarse\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/\">Inicia Sesión</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\">contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js",["77","78","79","80","81","82","83","84","85","86"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\n\r\nexport default function ForgetPassword() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Recupera tu contraseña</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Recuperar\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js",["87","88","89","90","91","92","93"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport avatar from \"../Images/avataaars.svg\"\r\nimport \"./login.css\"\r\n\r\nfunction Login() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login  background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Bienvenidos</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Ingresar</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Ingresar\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/register\">Registrate Aquí</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\">contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js",["94"],[],"import React, { useState, useEffect } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport Swal from 'sweetalert2';\r\nimport './game1.css';\r\n\r\nconst Game1 = () => {\r\n    const [letters, setLetters] = useState([]);\r\n    const [targetLetter, setTargetLetter] = useState('');\r\n    const [gameResult, setGameResult] = useState(null);\r\n    const [time, setTime] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [showPlayButton, setShowPlayButton] = useState(true);\r\n    const [showRules, setShowRules] = useState(true);\r\n    const [wins, setWins] = useState(0);\r\n    const [bestTime, setBestTime] = useState(null);\r\n\r\n    const generateRandomLetter = () => {\r\n        const randomCharCode = Math.floor(Math.random() * 26) + 65;\r\n        return String.fromCharCode(randomCharCode);\r\n    };\r\n\r\n    const randomizeLetters = () => {\r\n        const randomizedLetters = [];\r\n        const usedLetters = [];\r\n\r\n        while (randomizedLetters.length < 2) {\r\n            const randomLetter = generateRandomLetter();\r\n            if (!usedLetters.includes(randomLetter)) {\r\n                usedLetters.push(randomLetter);\r\n\r\n                randomizedLetters.push({\r\n                    id: randomizedLetters.length + 1,\r\n                    letter: randomLetter,\r\n                    left: Math.random() * 400 + 100, \r\n                    top: Math.random() * 400 + 100,\r\n                });\r\n            }\r\n        }\r\n\r\n        setLetters(randomizedLetters);\r\n\r\n        const randomIndex = Math.floor(Math.random() * 2);\r\n        setTargetLetter(randomizedLetters[randomIndex].letter);\r\n        setGameResult(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                setTime((prevTime) => prevTime + 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [isRunning]);\r\n\r\n    const handlePlay = () => {\r\n        if (showRules) {\r\n            Swal.fire({\r\n                title: '¡Bienvenido al juego!',\r\n                text: 'Arrastra la letra correcta al objetivo. ¡Gana estrellas y diviértete!',\r\n                confirmButtonText: 'Comenzar',\r\n            }).then(() => {\r\n                setShowRules(false);\r\n                randomizeLetters();\r\n                setIsRunning(true);\r\n                setTime(0);\r\n                setShowPlayButton(false);\r\n            });\r\n        } else {\r\n            randomizeLetters();\r\n            setIsRunning(true);\r\n            setTime(0);\r\n            setShowPlayButton(false);\r\n        }\r\n    };\r\n\r\n    const handleDrop = (droppedLetter, position) => {\r\n        const gano = droppedLetter === targetLetter;\r\n\r\n        if (gano) {\r\n            setWins(wins + 1);\r\n            if (bestTime === null || time < bestTime) {\r\n                setBestTime(time);\r\n            }\r\n\r\n            Swal.fire({\r\n                html: `<div>\r\n                    <p style=\"font-size: 40px\">⭐⭐⭐</p>\r\n                    <p style=\"font-weight: bold; font-size: 20px\">¡Felicidades! Ganaste en ${time} segundos.</p>\r\n                </div>`,\r\n                confirmButtonText: 'Ok',\r\n            }).then(() => {\r\n                Swal.fire({\r\n                    title: '¿Jugar de nuevo?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Sí',\r\n                    cancelButtonText: 'No',\r\n                    confirmButtonColor: '#3498db',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        handlePlay();\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            Swal.fire({\r\n                html: `<p>¡Perdiste! .</p><p>La letra correcta era \"${targetLetter}\"</p>`,\r\n                confirmButtonText: 'Ok',\r\n            }).then(() => {\r\n                Swal.fire({\r\n                    title: '¿Jugar de nuevo?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Sí',\r\n                    cancelButtonText: 'No',\r\n                    confirmButtonColor: '#3498db',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        handlePlay();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div className=\"board\">\r\n                    {showPlayButton ? (\r\n                        <button onClick={handlePlay} className=\"play-button\">\r\n                            Jugar\r\n                        </button>\r\n                    ) : (\r\n                        <>\r\n                            <div\r\n                                className=\"target\"\r\n                                onDragOver={(e) => e.preventDefault()}\r\n                                onDrop={(e) => {\r\n                                    const droppedLetter = e.dataTransfer.getData('letter');\r\n                                    handleDrop(droppedLetter);\r\n                                }}\r\n                            >\r\n                                {targetLetter}\r\n                            </div>\r\n                            {letters.map((letterData, index) => (\r\n                                <div\r\n                                    key={letterData.id}\r\n                                    className=\"piece\"\r\n                                    style={{\r\n                                        left: `${letterData.left}px`,\r\n                                        top: `${letterData.top}px`,\r\n                                    }}\r\n                                    onDragStart={(e) => e.dataTransfer.setData('letter', letterData.letter)}\r\n                                    onDragEnd={(e) => {\r\n                                        letters[index].left = e.clientX;\r\n                                        letters[index].top = e.clientY;\r\n                                    } }\r\n                                    draggable\r\n                                >\r\n                                    <span>{letterData.letter}</span>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div>Cronómetro: {time} segundos</div>\r\n                <div>Partidas ganadas: {wins}</div>\r\n                <div>Mejor tiempo: {bestTime === null ? 'N/A' : `${bestTime} segundos`}</div>\r\n                {!showPlayButton && (\r\n                    <button onClick={handlePlay} className=\"play-button\">\r\n                        Reiniciar\r\n                    </button>\r\n                )}\r\n            </DndProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game1;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js",["95"],[],"import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport './game2.css';\r\nimport { getWords } from '../../../services/game2Service';\r\nimport altavoz from \"../../../assets/altavoz.png\"\r\n\r\nconst Game2 = () => {\r\n    const [word, setWord] = useState(null);\r\n    const [showPlayAgainButton, setShowPlayAgainButton] = useState(false);\r\n\r\n    const getWord = () => {\r\n        const words = getWords();\r\n        const randomIndex = Math.floor(Math.random() * words.length);\r\n        const randomWord = words[randomIndex];\r\n        setWord(randomWord);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWord()\r\n    }, []);\r\n\r\n    const speak = () => {\r\n        if (word) {\r\n            const syllables = word.syllable_separation.split('-');\r\n            \r\n            const speechParts = syllables.map((syllable, index) => {\r\n                const utterance = new SpeechSynthesisUtterance(syllable);\r\n                utterance.pause = index < syllables.length - 1 ? 100 : 0;\r\n                return utterance;\r\n            });\r\n    \r\n            speechParts.forEach(part => {\r\n                window.speechSynthesis.speak(part);\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    const handleDrop = (droppedLetter) => {\r\n        if (droppedLetter === word.word) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Correcto',\r\n                text: `¡La palabra \"${word.word}\" es correcta!`,\r\n            });\r\n            setShowPlayAgainButton(true);\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Incorrecto',\r\n                text: 'La letra soltada no coincide con la palabra.',\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div className=\"targetWord\">targetWord</div>\r\n                <div className=\"center\">\r\n                    <div className=\"title\">\r\n                        {word ? word.word : ''}\r\n                    </div>\r\n                    <div className=\"speaker-button\">\r\n                        <img src={altavoz} className=\"altavoz-btn\" onClick={speak} alt='altavoz' />\r\n                    </div>\r\n                    <div className=\"syllable-separation\">\r\n                        <h2>Separación de sílabas</h2>\r\n                        <h5>{word ? word.syllable_separation : ''}</h5>\r\n                    </div>\r\n                </div>\r\n                {!showPlayAgainButton ? (\r\n                    <div\r\n                        className=\"piece\"\r\n                        onDragStart={(e) => e.dataTransfer.setData('word', word ? word.word : '')}\r\n                        draggable\r\n                    >\r\n                        <span>{word ? word.word : ''}</span>\r\n                    </div>\r\n                ) : <button onClick={getWord}>Jugar Nuevamente</button>}\r\n            </DndProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game2;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\game2Service.js",[],[],{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":23},{"ruleId":"96","severity":1,"message":"100","line":2,"column":40,"nodeType":"98","messageId":"99","endLine":2,"endColumn":51},{"ruleId":"96","severity":1,"message":"101","line":3,"column":29,"nodeType":"98","messageId":"99","endLine":3,"endColumn":38},{"ruleId":"96","severity":1,"message":"102","line":3,"column":40,"nodeType":"98","messageId":"99","endLine":3,"endColumn":48},{"ruleId":"96","severity":1,"message":"103","line":15,"column":11,"nodeType":"98","messageId":"99","endLine":15,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":78,"column":8,"nodeType":"106","endLine":78,"endColumn":14,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"108","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"109","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"110","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"111","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"112","line":24,"column":12,"nodeType":"98","messageId":"99","endLine":24,"endColumn":17},{"ruleId":"96","severity":1,"message":"113","line":25,"column":12,"nodeType":"98","messageId":"99","endLine":25,"endColumn":20},{"ruleId":"96","severity":1,"message":"108","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"109","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"110","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"111","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"114","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":18},{"ruleId":"96","severity":1,"message":"115","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":21},{"ruleId":"96","severity":1,"message":"116","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":15},{"ruleId":"96","severity":1,"message":"117","line":17,"column":5,"nodeType":"98","messageId":"99","endLine":17,"endColumn":15},{"ruleId":"96","severity":1,"message":"112","line":24,"column":12,"nodeType":"98","messageId":"99","endLine":24,"endColumn":17},{"ruleId":"96","severity":1,"message":"118","line":34,"column":11,"nodeType":"98","messageId":"99","endLine":34,"endColumn":34},{"ruleId":"96","severity":1,"message":"108","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"109","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"110","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"111","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"119","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":14},{"ruleId":"96","severity":1,"message":"112","line":26,"column":12,"nodeType":"98","messageId":"99","endLine":26,"endColumn":17},{"ruleId":"96","severity":1,"message":"113","line":27,"column":12,"nodeType":"98","messageId":"99","endLine":27,"endColumn":20},{"ruleId":"96","severity":1,"message":"120","line":10,"column":12,"nodeType":"98","messageId":"99","endLine":10,"endColumn":22},{"ruleId":"96","severity":1,"message":"121","line":44,"column":11,"nodeType":"98","messageId":"99","endLine":44,"endColumn":21},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'useContext' is defined but never used.","'Swal' is defined but never used.","'Cookies' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'KeyIcon' is defined but never used.","'IconButton' is defined but never used.","'handleMouseDownPassword' is assigned a value but never used.","'avatar' is defined but never used.","'gameResult' is assigned a value but never used.","'handleDrop' is assigned a value but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [refreshToken, user]",{"range":"125","text":"126"},[2334,2340],"[refreshToken, user]"]