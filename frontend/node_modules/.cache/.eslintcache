[{"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js":"1","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js":"2","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\NewPassword.js":"3","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js":"4","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js":"5","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Game4.js":"6","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js":"7","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js":"8","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js":"9","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\layoutGame\\LayoutGame.js":"10","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\VideoExplicacion.js":"11","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js":"12","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js":"13","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js":"14","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game3\\Game3.js":"15","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Compoments\\Header.js":"16","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\datosServices.js":"17","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Card.js":"18"},{"size":559,"mtime":1699485554276,"results":"19","hashOfConfig":"20"},{"size":1564,"mtime":1702060490119,"results":"21","hashOfConfig":"20"},{"size":4866,"mtime":1699233076484,"results":"22","hashOfConfig":"20"},{"size":9453,"mtime":1702074193309,"results":"23","hashOfConfig":"20"},{"size":3783,"mtime":1702072501899,"results":"24","hashOfConfig":"20"},{"size":5922,"mtime":1700627354372,"results":"25","hashOfConfig":"20"},{"size":2802,"mtime":1699499826725,"results":"26","hashOfConfig":"20"},{"size":5571,"mtime":1702070917083,"results":"27","hashOfConfig":"20"},{"size":6462,"mtime":1699500382734,"results":"28","hashOfConfig":"20"},{"size":1756,"mtime":1702070984484,"results":"29","hashOfConfig":"20"},{"size":3053,"mtime":1702074627068,"results":"30","hashOfConfig":"20"},{"size":5173,"mtime":1699233076447,"results":"31","hashOfConfig":"20"},{"size":3872,"mtime":1699233076449,"results":"32","hashOfConfig":"20"},{"size":2526,"mtime":1702072877296,"results":"33","hashOfConfig":"20"},{"size":5237,"mtime":1702076416090,"results":"34","hashOfConfig":"20"},{"size":1488,"mtime":1698593266892,"results":"35","hashOfConfig":"20"},{"size":3849,"mtime":1702076323952,"results":"36","hashOfConfig":"20"},{"size":588,"mtime":1699241157329,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"z7pusm",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"42"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js",["100","101"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthProvider } from './Context/AuthContext';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n\r\n        <App />\r\n\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n",[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js",["102","103","104","105","106","107","108","109"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\NewPassword.js",["110","111","112","113","114","115","116","117","118"],[],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport api from \"../api/api\"\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function NewPassword() {\r\n\r\n    const navigator = useNavigate();\r\n\r\n\r\n\r\n    let { token } = useParams();\r\n\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getToken()\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const getToken = async (event) => {\r\n\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                reset: token\r\n            }\r\n        }\r\n\r\n        await api.get('/user/checkToken', config).then(async (res) => {\r\n\r\n\r\n\r\n            const status = res.data.status\r\n            const message = res.data.message\r\n\r\n            if (!status) {\r\n\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: message,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                navigator(\"/\")\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const sendEmailAhandler = async event => {\r\n\r\n        event.preventDefault()\r\n\r\n\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                reset: token\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            newPassword: password\r\n        }\r\n\r\n\r\n        await api.put('/user/newPassword', data, config).then(async (res) => {\r\n\r\n            const status = res.data.status\r\n            const message = res.data.message\r\n\r\n            if (status) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: \"Contraseña Cambiada, intenta iniciar sesión de nuevo\",\r\n                    showConfirmButton: true,\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/`;\r\n                    }\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: message,\r\n                    timer: 1500\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Recupera tu contraseña</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu nueva contraseña</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Contraseña\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={sendEmailAhandler} className=\"main-button\">\r\n                                        Cambiar Contraseña\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js",["119","120","121"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js",["122","123"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Game4.js",["124","125","126","127"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport card1 from \"../../../assets/images/card1.png\";\r\nimport card2 from \"../../../assets/images/card2.png\";\r\nimport card3 from \"../../../assets/images/card3.png\";\r\nimport card4 from \"../../../assets/images/card4.png\";\r\nimport \"./game4.css\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../../api/api\"\r\nimport Swal from 'sweetalert2';\r\nimport soundNoMatch from '../../../assets/sounds/no-match.mp3';\r\nimport soundMatch from '../../../assets/sounds/match.wav';\r\nimport soundWin from '../../../assets/sounds/win.wav';\r\n\r\nconst Game4 = () => {\r\n    const navigator = useNavigate();\r\n    const { user } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([]);\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    const [time, setTime] = useState(0);\r\n    const [bestTime, setBestTime] = useState(null);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n    const [count, setCount] = useState(null);\r\n    const [score, setScore] = useState(null)\r\n    const [matchTime, setMatchTime] = useState(null);\r\n\r\n    const audioNoMatch = new Audio(soundNoMatch);\r\n    const audioMatch = new Audio(soundMatch);\r\n    const audioWin = new Audio(soundWin);\r\n\r\n    useEffect(() => {\r\n        getScore()\r\n    }, []);\r\n\r\n\r\n    const initialCards = [\r\n        { name: \"gato\", image: card1 },\r\n        { name: \"jirafa\", image: card2 },\r\n        { name: \"perro\", image: card3 },\r\n        { name: \"león\", image: card4 },\r\n    ];\r\n\r\n    //obtner score \r\n    const getScore = async () => {\r\n        const score = {\r\n            token: user.token,\r\n            game: \"game4\"\r\n        }\r\n        try {\r\n            const response = await api.post('/getScore', score)\r\n            if (response.status === 200) {\r\n                console.log(\"tiempo\", response.data.game.bestTime)\r\n                setBestTime(response.data.game.bestTime)\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const saveScore = async () => {\r\n        console.log(\"time\", time)\r\n        const score = {\r\n            bestTime: time,\r\n            game: \"game4\",\r\n            token: user.token\r\n        }\r\n        try {\r\n            const response = await api.post('/score', score)\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                setTime((prevTime) => prevTime + 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [isRunning]);\r\n\r\n    useEffect(() => {\r\n        const duplicatedCards = [...initialCards, ...initialCards].map((card) => ({ ...card }));\r\n        duplicatedCards.sort(() => Math.random() - 0.5);\r\n        setCount(duplicatedCards.length)\r\n        setCards(duplicatedCards);\r\n    }, []);\r\n\r\n    \r\n\r\n    const handleCardClick = (index, text) => {\r\n\r\n        updateCardState(index, true);\r\n        if (selectedCard === null) {\r\n            setSelectedCard(index);\r\n        } else {\r\n            if (index !== selectedCard) {\r\n                checkForMatch(selectedCard, index);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateCardState = (index, isFlipped) => {\r\n        const updatedCards = [...cards];\r\n        updatedCards[index].isFlipped = isFlipped;\r\n        setCards(updatedCards);\r\n    };\r\n\r\n    const checkForMatch = (index1, index2) => {\r\n        if (cards[index1].name === cards[index2].name) {\r\n            const updatedCards = [...cards];\r\n            updatedCards[index1].match = true;\r\n            updatedCards[index2].match = true;\r\n            setCards(updatedCards);\r\n            setCount(count - 2);\r\n\r\n            const matchDuration = time - matchTime;\r\n            const quickMatchThreshold = 5;\r\n            const additionalPoints = matchDuration < quickMatchThreshold ? 10 : 0;\r\n            const newScore = time + additionalPoints;\r\n            setScore(newScore)\r\n            setMatchTime(null);\r\n\r\n            if (count === 2) {\r\n                audioWin.play(); \r\n                getWin();\r\n            }else{\r\n                audioMatch.play();\r\n            }\r\n        } else {\r\n            audioNoMatch.play();\r\n            setSelectedCard(null);\r\n            setTimeout(() => {\r\n                updateCardState(index1, false);\r\n                updateCardState(index2, false);\r\n            }, 500);\r\n        }\r\n\r\n        setSelectedCard(null);\r\n    };\r\n\r\n\r\n    const getWin = () => {\r\n        setCount(0)\r\n        Swal.fire({\r\n            html: `<div>\r\n                    <p style=\"font-weight: bold; font-size: 20px\">¡Felicidades! Ganaste en ${time} segundos.</p>\r\n                </div>`,\r\n            confirmButtonText: 'Jugar de Nuevo',\r\n            cancelButtonText: 'Salir',\r\n            showCancelButton: true\r\n        }).then((result) => {\r\n            saveScore();\r\n            if (result.isConfirmed) {\r\n                window.location.reload();\r\n            } else {\r\n                navigator(\"/\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-game4\">\r\n            <div className=\"game-game4\">\r\n                {cards.map((card, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        card={card}\r\n                        isFlipped={card.isFlipped}\r\n                        handleClick={() => handleCardClick(index, card.name)}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n            <div>Cronómetro: {time} segundos</div>\r\n            <div>Mejor puntaje: {score} puntos</div>\r\n            <div>Mejor tiempo: {bestTime === null ? 'N/A' : `${bestTime} segundos`}</div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Game4;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js",["128","129","130","131","132"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js",["133"],[],"import React, { useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport api from \"../api/api\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n\r\n    const navigator = useNavigate()\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const register = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        try {\r\n\r\n            const response = await api.post('/user/register', register)\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                title: \"Por favor inicia sesión!\",\r\n                showConfirmButton: true,\r\n                confirmButtonText: 'OK',\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    navigator(\"/\");\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            console.log(\"error\", error.response.data.message)\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/error-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                title: error.response.data.message,\r\n                showConfirmButton: true,\r\n                confirmButtonText: 'OK',\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Registrate</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo y una contraseña</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Registrarse\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/\">Inicia Sesión</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\" >contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\layoutGame\\LayoutGame.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\VideoExplicacion.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js",["134"],[],"import React, { createContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst getUserFromStorage = () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n};\r\n\r\nconst setUserToStorage = (user) => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(getUserFromStorage());\r\n    const [error, setError] = useState('');\r\n    const navigator = useNavigate();\r\n\r\n    const getUser = async () => {\r\n\r\n        await api.get('/user/' + user.id).then(res => {\r\n            if (res.status === 200) {\r\n                return res.data.user;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await api.post('/user/token', {\r\n                token: localStorage.getItem('refreshToken'),\r\n            });\r\n            localStorage.removeItem(\"user-token\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n\r\n            const { token, refreshToken } = response.data;\r\n\r\n            localStorage.setItem('user-token', token);\r\n            localStorage.setItem(\"refreshToken\", refreshToken)\r\n\r\n            const userNew = await getUser();\r\n\r\n            setUser({\r\n                ...user,\r\n                permisos: user.permisos,\r\n                token: token,\r\n                refreshToken: refreshToken,\r\n            });\r\n\r\n            setUserToStorage({\r\n                ...user,\r\n                token: token,\r\n                permisos: userNew?.permisos,\r\n                refreshToken: refreshToken,\r\n            });\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                logout();\r\n            }\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n\r\n    useEffect(() => {\r\n        if (user && user.refreshToken) {\r\n            const refreshTokenInterval = setInterval(refreshToken, 3 * 60 * 1000); // Actualizar el token cada 15 minutos\r\n            return () => {\r\n                clearInterval(refreshTokenInterval);\r\n            };\r\n        }\r\n    }, [user]);*/\r\n\r\n    useEffect(() => {\r\n        setUserToStorage(user);\r\n    }, [user]);\r\n\r\n    const login = async (values) => {\r\n        try {\r\n            const response = await api.post('/user/login', values);\r\n\r\n            if (response.status === 200) {\r\n                setUser(response.data);\r\n                setUserToStorage(response.data);\r\n                localStorage.setItem('user-token', response.data.token);\r\n                localStorage.setItem(\"refreshToken\", response.data.refreshToken)\r\n                localStorage.setItem(\"role\", response.data.role)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                    title: \"Bienvenido!!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                navigator(\"/\")\r\n            } else {\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n\r\n                setError(error.response.data.message);\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                setError('Ocurrió un error al iniciar sesión.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await api.post('/user/logout', { token: user.token });\r\n            console.log(res);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"user-token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.removeItem(\"role\");\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                user,\r\n                error,\r\n                login,\r\n                logout,\r\n                getUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js",["135","136","137","138","139","140","141","142"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport api from \"../api/api\"\r\n\r\nexport default function ForgetPassword() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n\r\n\r\n\r\n    const sendEmailAhandler = async event => {\r\n\r\n        let user = {\r\n            email: email\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        await api.post('/user/forgotPassword', user).then(async (res) => {\r\n            let status = res.data.status\r\n            let message = res.data.message\r\n\r\n\r\n            if (status) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: message,\r\n                    showConfirmButton: true,\r\n\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/`;\r\n                    }\r\n                })\r\n\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: message,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Recupera tu contraseña</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={sendEmailAhandler} className=\"main-button\">\r\n                                        Recuperar\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game3\\Game3.js",["143","144","145"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Compoments\\Header.js",["146"],[],"import React, { useContext } from 'react';\r\nimport \"./header.css\";\r\nimport android from \"../Images/android-chrome-512x512.png\";\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Header() {\r\n    const { logout } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const salir = async (e) => {\r\n        e.preventDefault();\r\n        await logout();\r\n        Swal.fire({\r\n            icon: 'success',\r\n            iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n            title: \"Se ha cerrado sesión correctamente!\",\r\n            showConfirmButton: true,\r\n            confirmButtonText: 'OK',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                navigate(\"/\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='fixed-top'>\r\n            <nav className=\"navbar navbar-light custom-bg\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\"><img className='img-fluid logo' src={android} alt=\"Logo\" /></a>\r\n                    <form className=\"d-flex\">\r\n                        <button onClick={salir} className=\"btn btn-outline-success\" type=\"button\">Salir</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\datosServices.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Card.js",[],[],{"ruleId":"147","severity":1,"message":"148","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":21},{"ruleId":"147","severity":1,"message":"151","line":8,"column":10,"nodeType":"149","messageId":"150","endLine":8,"endColumn":22},{"ruleId":"147","severity":1,"message":"152","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":23},{"ruleId":"147","severity":1,"message":"153","line":3,"column":29,"nodeType":"149","messageId":"150","endLine":3,"endColumn":38},{"ruleId":"147","severity":1,"message":"154","line":3,"column":40,"nodeType":"149","messageId":"150","endLine":3,"endColumn":48},{"ruleId":"147","severity":1,"message":"155","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":13},{"ruleId":"147","severity":1,"message":"156","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":13},{"ruleId":"147","severity":1,"message":"157","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":13},{"ruleId":"147","severity":1,"message":"158","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":14},{"ruleId":"147","severity":1,"message":"159","line":25,"column":9,"nodeType":"149","messageId":"150","endLine":25,"endColumn":17},{"ruleId":"147","severity":1,"message":"160","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"147","severity":1,"message":"161","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"163","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":18},{"ruleId":"147","severity":1,"message":"164","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":21},{"ruleId":"147","severity":1,"message":"165","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":15},{"ruleId":"147","severity":1,"message":"166","line":17,"column":5,"nodeType":"149","messageId":"150","endLine":17,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":38,"column":8,"nodeType":"169","endLine":38,"endColumn":10,"suggestions":"170"},{"ruleId":"147","severity":1,"message":"171","line":131,"column":11,"nodeType":"149","messageId":"150","endLine":131,"endColumn":34},{"ruleId":"147","severity":1,"message":"172","line":20,"column":12,"nodeType":"149","messageId":"150","endLine":20,"endColumn":17},{"ruleId":"147","severity":1,"message":"173","line":23,"column":23,"nodeType":"149","messageId":"150","endLine":23,"endColumn":35},{"ruleId":"167","severity":1,"message":"174","line":32,"column":8,"nodeType":"169","endLine":32,"endColumn":10,"suggestions":"175"},{"ruleId":"147","severity":1,"message":"176","line":9,"column":28,"nodeType":"149","messageId":"150","endLine":9,"endColumn":45},{"ruleId":"167","severity":1,"message":"177","line":16,"column":8,"nodeType":"169","endLine":16,"endColumn":15,"suggestions":"178"},{"ruleId":"147","severity":1,"message":"173","line":23,"column":23,"nodeType":"149","messageId":"150","endLine":23,"endColumn":35},{"ruleId":"167","severity":1,"message":"174","line":34,"column":8,"nodeType":"169","endLine":34,"endColumn":10,"suggestions":"179"},{"ruleId":"147","severity":1,"message":"180","line":68,"column":19,"nodeType":"149","messageId":"150","endLine":68,"endColumn":27},{"ruleId":"167","severity":1,"message":"181","line":92,"column":8,"nodeType":"169","endLine":92,"endColumn":10,"suggestions":"182"},{"ruleId":"147","severity":1,"message":"183","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":12},{"ruleId":"147","severity":1,"message":"161","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"184","line":30,"column":11,"nodeType":"149","messageId":"150","endLine":30,"endColumn":20},{"ruleId":"147","severity":1,"message":"185","line":32,"column":13,"nodeType":"149","messageId":"150","endLine":32,"endColumn":18},{"ruleId":"147","severity":1,"message":"180","line":41,"column":19,"nodeType":"149","messageId":"150","endLine":41,"endColumn":27},{"ruleId":"147","severity":1,"message":"186","line":35,"column":11,"nodeType":"149","messageId":"150","endLine":35,"endColumn":23},{"ruleId":"147","severity":1,"message":"160","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"147","severity":1,"message":"161","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"163","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":18},{"ruleId":"147","severity":1,"message":"164","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":21},{"ruleId":"147","severity":1,"message":"165","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":15},{"ruleId":"147","severity":1,"message":"166","line":17,"column":5,"nodeType":"149","messageId":"150","endLine":17,"endColumn":15},{"ruleId":"147","severity":1,"message":"171","line":79,"column":11,"nodeType":"149","messageId":"150","endLine":79,"endColumn":34},{"ruleId":"147","severity":1,"message":"187","line":17,"column":12,"nodeType":"149","messageId":"150","endLine":17,"endColumn":22},{"ruleId":"147","severity":1,"message":"188","line":17,"column":24,"nodeType":"149","messageId":"150","endLine":17,"endColumn":37},{"ruleId":"167","severity":1,"message":"174","line":69,"column":8,"nodeType":"169","endLine":69,"endColumn":10,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":32,"column":21,"nodeType":"192","endLine":32,"endColumn":49},"no-unused-vars","'DndProvider' is defined but never used.","Identifier","unusedVar","'HTML5Backend' is defined but never used.","'BrowserRouter' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Game1' is defined but never used.","'Game2' is defined but never used.","'Game3' is defined but never used.","'Header' is defined but never used.","'navigate' is assigned a value but never used.","'useContext' is defined but never used.","'Cookies' is defined but never used.","'Button' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'KeyIcon' is defined but never used.","'IconButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'handleMouseDownPassword' is assigned a value but never used.","'word2' is assigned a value but never used.","'setIsRunning' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getScore'. Either include it or remove the dependency array.",["194"],"'setVisibleOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateRandomOptions'. Either include it or remove the dependency array.",["195"],["196"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialCards'. Either include it or remove the dependency array.",["197"],"'Swal' is defined but never used.","'navigator' is assigned a value but never used.","'error' is assigned a value but never used.","'refreshToken' is assigned a value but never used.","'gameResult' is assigned a value but never used.","'setGameResult' is assigned a value but never used.",["198"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"206","fix":"207"},{"desc":"201","fix":"208"},"Update the dependencies array to be: [getToken]",{"range":"209","text":"210"},"Update the dependencies array to be: [getScore]",{"range":"211","text":"212"},"Update the dependencies array to be: [generateRandomOptions, score]",{"range":"213","text":"214"},{"range":"215","text":"212"},"Update the dependencies array to be: [initialCards]",{"range":"216","text":"217"},{"range":"218","text":"212"},[1040,1042],"[getToken]",[1157,1159],"[getScore]",[525,532],"[generateRandomOptions, score]",[1405,1407],[3026,3028],"[initialCards]",[2179,2181]]