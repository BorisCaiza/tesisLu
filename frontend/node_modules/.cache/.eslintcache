[{"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js":"1","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js":"2","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js":"3","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js":"4","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js":"5","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js":"6","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js":"7","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js":"8","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js":"9","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js":"10","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\datosServices.js":"11","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game3\\Game3.js":"12","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\layoutGame\\LayoutGame.js":"13","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Compoments\\Header.js":"14","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\VideoExplicacion.js":"15","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Game4.js":"16","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Card.js":"17"},{"size":446,"mtime":1698592995667,"results":"18","hashOfConfig":"19"},{"size":1549,"mtime":1699054693064,"results":"20","hashOfConfig":"19"},{"size":5173,"mtime":1698639143014,"results":"21","hashOfConfig":"19"},{"size":6564,"mtime":1698593266909,"results":"22","hashOfConfig":"19"},{"size":3872,"mtime":1698639143016,"results":"23","hashOfConfig":"19"},{"size":5978,"mtime":1699051868080,"results":"24","hashOfConfig":"19"},{"size":2584,"mtime":1699051825519,"results":"25","hashOfConfig":"19"},{"size":2510,"mtime":1698592995710,"results":"26","hashOfConfig":"19"},{"size":8343,"mtime":1698639143018,"results":"27","hashOfConfig":"19"},{"size":3002,"mtime":1698592996762,"results":"28","hashOfConfig":"19"},{"size":18303,"mtime":1698592996975,"results":"29","hashOfConfig":"19"},{"size":3230,"mtime":1698592996856,"results":"30","hashOfConfig":"19"},{"size":912,"mtime":1699054301915,"results":"31","hashOfConfig":"19"},{"size":1488,"mtime":1698593266892,"results":"32","hashOfConfig":"19"},{"size":1733,"mtime":1699054196194,"results":"33","hashOfConfig":"19"},{"size":2159,"mtime":1699055382072,"results":"34","hashOfConfig":"19"},{"size":736,"mtime":1699055395116,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"z7pusm",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js",["98","99","100","101","102","103"],[],"import './App.css';\r\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { AuthContext } from './Context/AuthContext';\r\nimport Login from './Pages/Login';\r\nimport Register from './Pages/Register';\r\nimport ForgetPassword from './Pages/ForgetPassword';\r\nimport Games from './Pages/Games/Games';\r\nimport Game1 from './Pages/Games/game1/Game1';\r\nimport Game2 from './Pages/Games/game2/Game2';\r\nimport Game3 from './Pages/Games/game3/Game3';\r\nimport LayoutGame from './Pages/Games/layoutGame/LayoutGame';\r\nimport Header from './Compoments/Header';\r\nimport VideoExplicacion from './Pages/Games/VideoExplicacion';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate('/');\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {!user && <Header />}\r\n      <Routes>\r\n        {user ? (\r\n          <>\r\n            <Route index element={<Login />} />\r\n            <Route path='/register' element={<Register />} />\r\n            <Route path='/forgot-password' element={<ForgetPassword />} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route index element={<Games />} />\r\n            <Route path='/video/:id' element={<VideoExplicacion />} />\r\n            <Route path='/games/:id' element={<LayoutGame />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js",["104"],[],"import React, { createContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst getUserFromStorage = () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n};\r\n\r\nconst setUserToStorage = (user) => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(getUserFromStorage());\r\n    const [error, setError] = useState('');\r\n    const navigator = useNavigate();\r\n\r\n    const getUser = async () => {\r\n\r\n        await api.get('/user/' + user.id).then(res => {\r\n            if (res.status === 200) {\r\n                return res.data.user;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await api.post('/user/token', {\r\n                token: localStorage.getItem('refreshToken'),\r\n            });\r\n            localStorage.removeItem(\"user-token\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n\r\n            const { token, refreshToken } = response.data;\r\n\r\n            localStorage.setItem('user-token', token);\r\n            localStorage.setItem(\"refreshToken\", refreshToken)\r\n\r\n            const userNew = await getUser();\r\n\r\n            setUser({\r\n                ...user,\r\n                permisos: user.permisos,\r\n                token: token,\r\n                refreshToken: refreshToken,\r\n            });\r\n\r\n            setUserToStorage({\r\n                ...user,\r\n                token: token,\r\n                permisos: userNew?.permisos,\r\n                refreshToken: refreshToken,\r\n            });\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                logout();\r\n            }\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n\r\n    useEffect(() => {\r\n        if (user && user.refreshToken) {\r\n            const refreshTokenInterval = setInterval(refreshToken, 3 * 60 * 1000); // Actualizar el token cada 15 minutos\r\n            return () => {\r\n                clearInterval(refreshTokenInterval);\r\n            };\r\n        }\r\n    }, [user]);*/\r\n\r\n    useEffect(() => {\r\n        setUserToStorage(user);\r\n    }, [user]);\r\n\r\n    const login = async (values) => {\r\n        try {\r\n            const response = await api.post('/user/login', values);\r\n\r\n            if (response.status === 200) {\r\n                setUser(response.data);\r\n                setUserToStorage(response.data);\r\n                localStorage.setItem('user-token', response.data.token);\r\n                localStorage.setItem(\"refreshToken\", response.data.refreshToken)\r\n                localStorage.setItem(\"role\", response.data.role)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                    title: \"Bienvenido!!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                navigator(\"/\")\r\n            } else {\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n\r\n                setError(error.response.data.message);\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                setError('Ocurrió un error al iniciar sesión.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await api.post('/user/logout', { token: user.token });\r\n            console.log(res);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"user-token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.removeItem(\"role\");\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                user,\r\n                error,\r\n                login,\r\n                logout,\r\n                getUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js",["105","106","107","108"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport api from \"../api/api\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n\r\n    const navigator = useNavigate()\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const register = {\r\n            email,\r\n            password\r\n        }\r\n\r\n\r\n\r\n        try {\r\n\r\n            const response = await api.post('/user/register', register)\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                title: \"Por favor inicia sesión!\",\r\n                showConfirmButton: true,\r\n                confirmButtonText: 'OK',\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    navigator(\"/\");\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            console.log(\"error\", error.response.data.message)\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/error-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                title: error.response.data.message,\r\n                showConfirmButton: true,\r\n                confirmButtonText: 'OK',\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Registrate</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo y una contraseña</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Registrarse\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/\">Inicia Sesión</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\">contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js",["109","110","111","112","113","114","115","116","117","118"],[],"import React, { useContext, useState } from \"react\";\nimport './login.css';\nimport Swal from 'sweetalert2'\nimport Cookies from 'universal-cookie';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport KeyIcon from '@mui/icons-material/Key';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport {\n    IconButton,\n    InputAdornment\n} from '@mui/material';\n\nexport default function ForgetPassword() {\n\n\n    const [email, setEmail] = useState('');\n\n    const authSubmitHandler = (e) => {\n        e.preventDefault();\n        // Aquí puedes agregar la lógica de autenticación si es necesario\n    };\n\n\n\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div className='container-fluid-login background'>\n\n\n            <div className='row justify-content-center'>\n\n                <div className='col-sm'>\n\n\n\n                    <h1 className='title mb-3'>Recupera tu contraseña</h1>\n\n                    <div className=\"center\">\n\n                        <Form className=\"Auth-form\">\n                            <div className=\"Auth-form-content\">\n                                <h3 className=\"Auth-form-title\">Coloca tu correo</h3>\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\n                                        Correo electrónico\n                                    </InputLabel>\n                                    <Input\n                                        id=\"input-with-icon-adornment\"\n                                        type=\"email\"\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <AccountCircle />\n                                            </InputAdornment>\n                                        }\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </FormControl>\n\n\n\n                                <div className=\"d-grid gap-2 mt-3\">\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\n                                        Recuperar\n                                    </button>\n                                </div>\n\n                            </div>\n                        </Form >\n                    </div>\n\n\n                </div>\n\n            </div>\n\n\n\n        </div>\n    );\n\n}\n\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js",["119","120","121","122","123","124"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport avatar from \"../Images/avataaars.svg\"\r\nimport \"./login.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../api/api\"\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n\r\n    const navigator = useNavigate()\r\n\r\n    const { error, login } = useContext(AuthContext);\r\n\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const user = { email, password }\r\n\r\n        await login(user)\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login  background'>\r\n            <div className='row justify-content-center'>\r\n                <div className='col-sm'>\r\n                    <h1 className='title mb-3'>Bienvenidos</h1>\r\n                    <div className=\"center\">\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Ingresar</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Ingresar\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    navigator('/register'); // Utiliza la API de historial de React Router\r\n                                }}>Registrate Aquí</p>\r\n\r\n\r\n                                <p className=\"forgot-password text-right mt-2\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    navigator('/forgot-password'); // Utiliza la API de historial de React Router\r\n                                }}>¿Olvidaste tu contraseña?</p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js",["125","126"],[],"import React from 'react'\r\nimport \"./Games.css\"\r\nimport avatar from \"../../Images/workoutLLogo.png\"\r\nimport juego1 from \"../../assets/images/juego1.png\"\r\nimport juego2 from \"../../assets/images/juego2.png\"\r\nimport juego3 from \"../../assets/images/juego3.png\"\r\nimport juego4 from \"../../assets/images/juego4.png\"\r\nimport Header from '../../Compoments/Header';\r\n\r\nexport default function Games() {\r\n    const elementos = [\r\n        {\r\n            nombre: \"Segmentación de sonidos\",\r\n            descripcion: \"Arma un rompecabezas\",\r\n            imagen: juego1,\r\n            game: \"game1\"\r\n        },\r\n        {\r\n            nombre: \"Conciencia de sílabas\",\r\n            descripcion: \"Descripción del Elemento 2\",\r\n            imagen: juego2,\r\n            game: \"game2\"\r\n        },\r\n        {\r\n            nombre: \"Conciencia de rima\",\r\n            descripcion: \"Descripción del Elemento 3\",\r\n            imagen: juego3,\r\n            game: \"game3\"\r\n        },\r\n        {\r\n            nombre: \"Juego de Memoria \",\r\n            descripcion: \"Juego de Memoria \",\r\n            imagen: juego4,\r\n            game: \"game4\"\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n          \r\n\r\n\r\n            <div className='container-fluid background-games up'>\r\n\r\n                <div className='row justify-content-center'>\r\n\r\n                    <div className='col-sm center-games'>\r\n\r\n                        <div className='title-games'>\r\n                            <h1>Escoge un juego</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className='row justify-content-center mt-3'>\r\n                    {elementos.map((elemento, index) => ( // Aquí corregidod\r\n                        <div key={index} className=\"col-sm-5 mt-2\">\r\n                            <div className=\"card\">\r\n                                <img src={elemento.imagen} alt={elemento.nombre} style={{height: \"400px\"}} className='card-img-top img-fluid im-card' />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title title-card\">{elemento.nombre}</h5>\r\n                                    <p className=\"card-text\">{elemento.descripcion}</p>\r\n                                    <a href={`/video/${elemento.game}`}>  <button className=\"main-button\">Jugar</button> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js",["127","128","129"],[],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport Swal from 'sweetalert2';\r\nimport './game1.css';\r\nimport api from \"../../../api/api\"\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\n\r\nconst Game1 = () => {\r\n    const { user } = useContext(AuthContext);\r\n    const [letters, setLetters] = useState([]);\r\n    const [targetLetter, setTargetLetter] = useState('');\r\n    const [gameResult, setGameResult] = useState(null);\r\n    const [time, setTime] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [showPlayButton, setShowPlayButton] = useState(true);\r\n    const [showRules, setShowRules] = useState(true);\r\n    const [wins, setWins] = useState(0);\r\n    const [bestTime, setBestTime] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        getScore()\r\n    }, []);\r\n\r\n    const getScore = async () => {\r\n\r\n        const score = {\r\n\r\n            token: user.token,\r\n            game: \"game1\"\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            const response = await api.post('/getScore', score)\r\n\r\n            if (response.status === 200) {\r\n                setBestTime(response.data.game.bestTime)\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const saveScore = async () => {\r\n\r\n\r\n\r\n\r\n        const score = {\r\n            bestTime: 15,\r\n            game: \"game1\",\r\n            token: user.token\r\n        }\r\n\r\n        try {\r\n\r\n            const response = await api.post('/score', score)\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const generateRandomLetter = () => {\r\n        const randomCharCode = Math.floor(Math.random() * 26) + 65;\r\n        return String.fromCharCode(randomCharCode);\r\n    };\r\n\r\n    const randomizeLetters = () => {\r\n        const randomizedLetters = [];\r\n        const usedLetters = [];\r\n\r\n        while (randomizedLetters.length < 2) {\r\n            const randomLetter = generateRandomLetter();\r\n            if (!usedLetters.includes(randomLetter)) {\r\n                usedLetters.push(randomLetter);\r\n\r\n                randomizedLetters.push({\r\n                    id: randomizedLetters.length + 1,\r\n                    letter: randomLetter,\r\n                    left: Math.random() * 400,\r\n                    top: Math.random() * 400,\r\n                });\r\n            }\r\n        }\r\n\r\n        setLetters(randomizedLetters);\r\n\r\n        const randomIndex = Math.floor(Math.random() * 2);\r\n        setTargetLetter(randomizedLetters[randomIndex].letter);\r\n        setGameResult(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                setTime((prevTime) => prevTime + 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [isRunning]);\r\n\r\n    const handlePlay = () => {\r\n        if (showRules) {\r\n            Swal.fire({\r\n                title: '¡Bienvenido al juego!',\r\n                text: 'Arrastra la letra correcta al objetivo. ¡Gana estrellas y diviértete!',\r\n                confirmButtonText: 'Comenzar',\r\n            }).then(() => {\r\n                setShowRules(false);\r\n                randomizeLetters();\r\n                setIsRunning(true);\r\n                setTime(0);\r\n                setShowPlayButton(false);\r\n            });\r\n        } else {\r\n            randomizeLetters();\r\n            setIsRunning(true);\r\n            setTime(0);\r\n            setShowPlayButton(false);\r\n        }\r\n    };\r\n\r\n    const handleDrop = (droppedLetter, position) => {\r\n        const gano = droppedLetter === targetLetter;\r\n\r\n        if (gano) {\r\n            setWins(wins + 1);\r\n            if (bestTime === null || time < bestTime) {\r\n                setBestTime(time);\r\n            }\r\n\r\n            // Mueve la pieza a otro lugar cuando se gana\r\n            const updatedLetters = letters.map((letterData) => {\r\n                if (letterData.letter === droppedLetter) {\r\n                    letterData.left = Math.random() * 400;\r\n                    letterData.top = Math.random() * 400;\r\n                }\r\n                return letterData;\r\n            });\r\n            setLetters(updatedLetters);\r\n\r\n            Swal.fire({\r\n                html: `<div>\r\n                    <p style=\"font-size: 40px\">⭐⭐⭐</p>\r\n                    <p style=\"font-weight: bold; font-size: 20px\">¡Felicidades! Ganaste en ${time} segundos.</p>\r\n                </div>`,\r\n                confirmButtonText: 'Ok',\r\n            }).then(() => {\r\n                Swal.fire({\r\n                    title: '¿Jugar de nuevo?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Sí',\r\n                    cancelButtonText: 'No',\r\n                    confirmButtonColor: '#3498db',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        handlePlay();\r\n                        saveScore();\r\n\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            Swal.fire({\r\n                html: `<p>¡Perdiste! .</p><p>La letra correcta era \"${targetLetter}\"</p>`,\r\n                confirmButtonText: 'Ok',\r\n            }).then(() => {\r\n                Swal.fire({\r\n                    title: '¿Jugar de nuevo?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Sí',\r\n                    cancelButtonText: 'No',\r\n                    confirmButtonColor: '#3498db',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        handlePlay();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div className=\"board-game1\">\r\n                    {showPlayButton ? (\r\n                        <button onClick={handlePlay} className=\"play-button\">\r\n                            Jugar\r\n                        </button>\r\n                    ) : (\r\n                        <>\r\n                            <div\r\n                                className=\"target\"\r\n                                onDragOver={(e) => e.preventDefault()}\r\n                                onDrop={(e) => {\r\n                                    const droppedLetter = e.dataTransfer.getData('letter');\r\n                                    handleDrop(droppedLetter);\r\n                                }}\r\n                            >\r\n                                {targetLetter}\r\n                            </div>\r\n                            {letters.map((letterData, index) => (\r\n                                <div\r\n                                    key={letterData.id}\r\n                                    className=\"piece\"\r\n                                    style={{\r\n                                        left: `${letterData.left}px`,\r\n                                        top: `${letterData.top}px`,\r\n                                    }}\r\n                                    onDragStart={(e) => {\r\n                                        e.dataTransfer.setData('letter', letterData.letter);\r\n                                        letters[index].top = e.clientx\r\n                                        letters[index].left = e.clientY\r\n                                    }\r\n                                    }\r\n                                    draggable\r\n                                >\r\n                                    <span>{letterData.letter}</span>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div>Cronómetro: {time} segundos</div>\r\n                <div>Partidas ganadas: {wins}</div>\r\n                <div>Mejor tiempo: {bestTime === null ? 'N/A' : `${bestTime} segundos`}</div>\r\n                {!showPlayButton && (\r\n                    <button onClick={handlePlay} className=\"play-button\">\r\n                        Reiniciar\r\n                    </button>\r\n                )}\r\n            </DndProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game1;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game2\\Game2.js",["130"],[],"import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport './game2.css';\nimport { getWordsData } from '../../../services/datosServices';\nimport altavoz from \"../../../assets/altavoz.png\"\n\nconst Game2 = () => {\n    const [word, setWord] = useState(null);\n    const [showPlayAgainButton, setShowPlayAgainButton] = useState(false);\n\n    const getWord = () => {\n        const words = getWordsData();\n        const randomIndex = Math.floor(Math.random() * words.length);\n        const randomWord = words[randomIndex];\n        setWord(randomWord);\n    }\n\n    useEffect(() => {\n        getWord()\n    }, []);\n\n    const speak = () => {\n        if (word) {\n            const syllables = word.syllable_separation.split('-');\n            \n            const speechParts = syllables.map((syllable, index) => {\n                const utterance = new SpeechSynthesisUtterance(syllable);\n                utterance.pause = index < syllables.length - 1 ? 100 : 0;\n                return utterance;\n            });\n    \n            speechParts.forEach(part => {\n                window.speechSynthesis.speak(part);\n            });\n        }\n    }\n    \n\n\n\n\n    const handleDrop = (droppedLetter) => {\n        if (droppedLetter === word.word) {\n            Swal.fire({\n                icon: 'success',\n                title: 'Correcto',\n                text: `¡La palabra \"${word.word}\" es correcta!`,\n            });\n            setShowPlayAgainButton(true);\n        } else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Incorrecto',\n                text: 'La letra soltada no coincide con la palabra.',\n            });\n        }\n    }\n\n    return (\n        <div>\n            <DndProvider backend={HTML5Backend}>\n                <div className=\".target-word \">targetWord</div>\n                <div className=\"center\">\n                    <div className=\"title\">\n                        {word ? word.word : ''}\n                    </div>\n                    <div className=\"speaker-button\">\n                        <img src={altavoz} className=\"altavoz-btn\" onClick={speak} alt='altavoz' />\n                    </div>\n                    <div className=\"syllable-separation\">\n                        <h2>Separación de sílabas</h2>\n                        <h5>{word ? word.syllable_separation : ''}</h5>\n                    </div>\n                </div>\n                {!showPlayAgainButton ? (\n                    <div\n                        className=\"piece-word\"\n                        onDragStart={(e) => e.dataTransfer.setData('word', word ? word.word : '')}\n                        draggable\n                    >\n                        <span>{word ? word.word : ''}</span>\n                    </div>\n                ) : <button onClick={getWord}>Jugar Nuevamente</button>}\n            </DndProvider>\n        </div>\n    );\n};\n\nexport default Game2;\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\services\\datosServices.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game3\\Game3.js",["131","132"],[],"import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport './game3.css';\nimport { getrhymingWords } from '../../../services/datosServices';\n\nconst Game3 = () => {\n    const [targetWord, setTargetWord] = useState(null);\n    const [optionCorrectSelect, setOptionCorrectSelect] = useState(null);\n    const [optionIncorrectSelect, setOptionIncorrectSelect] = useState(null);\n    const [gameResult, setGameResult] = useState(null);\n    const orden = Math.random() < 0.5 ? 1 : 2;\n\n    const getDatos = () => {\n        const [randomWord, optionCorrect, optionIncorrect] = getrhymingWords();\n        setTargetWord(randomWord);\n        setOptionCorrectSelect(optionCorrect);\n        setOptionIncorrectSelect(optionIncorrect);\n    };\n\n    useEffect(() => {\n        getDatos();\n    }, []);\n\n    const handleOptionSelect = (selectedOption) => {\n        if (selectedOption.name === optionCorrectSelect.name) {\n            // El jugador ha ganado\n            Swal.fire({\n                title: '¡Ganaste!',\n                text: '¡Bien hecho! La palabra rima correctamente.',\n                icon: 'success',\n                showCancelButton: true,\n                cancelButtonText: 'Volver a jugar',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    getDatos();\n                }\n            });\n        } else {\n            // El jugador ha perdido\n            Swal.fire({\n                title: 'Perdiste',\n                text: 'La palabra seleccionada no rima correctamente.',\n                icon: 'error',\n                showCancelButton: true,\n                cancelButtonText: 'Volver a jugar',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    getDatos();\n                }\n            });\n        }\n    };\n\n    return (\n        <div className=\"board\">\n            <div>\n                <h1>{targetWord && targetWord.name}</h1>\n                <h3>Rima con...</h3>\n                <div className=\"button-container\">\n                    {orden === 1 ? (\n                        <>\n                            <button onClick={() => handleOptionSelect(optionIncorrectSelect)}>\n                                <img src=\"ruta_imagen_incorrecta.png\" alt=\"Option Incorrect\" />\n                            </button>\n                            <button onClick={() => handleOptionSelect(optionCorrectSelect)}>\n                                <img src=\"ruta_imagen_correcta.png\" alt=\"Option Correct\" />\n                            </button>\n                        </>\n                    ) : (\n                        <>\n                            <button onClick={() => handleOptionSelect(optionCorrectSelect)}>\n                                <img src=\"ruta_imagen_correcta.png\" alt=\"Option Correct\" />\n                            </button>\n                            <button onClick={() => handleOptionSelect(optionIncorrectSelect)}>\n                                <img src=\"ruta_imagen_incorrecta.png\" alt=\"Option Incorrect\" />\n                            </button>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Game3;\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\layoutGame\\LayoutGame.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Compoments\\Header.js",["133"],[],"import React, { useContext } from 'react';\r\nimport \"./header.css\";\r\nimport android from \"../Images/android-chrome-512x512.png\";\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Header() {\r\n    const { logout } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const salir = async (e) => {\r\n        e.preventDefault();\r\n        await logout();\r\n        Swal.fire({\r\n            icon: 'success',\r\n            iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n            title: \"Se ha cerrado sesión correctamente!\",\r\n            showConfirmButton: true,\r\n            confirmButtonText: 'OK',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                navigate(\"/\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='fixed-top'>\r\n            <nav className=\"navbar navbar-light custom-bg\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\"><img className='img-fluid logo' src={android} alt=\"Logo\" /></a>\r\n                    <form className=\"d-flex\">\r\n                        <button onClick={salir} className=\"btn btn-outline-success\" type=\"button\">Salir</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\VideoExplicacion.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Game4.js",["134"],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game4\\Card.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":3,"column":40,"nodeType":"137","messageId":"138","endLine":3,"endColumn":48},{"ruleId":"135","severity":1,"message":"140","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":13},{"ruleId":"135","severity":1,"message":"141","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":13},{"ruleId":"135","severity":1,"message":"142","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":30,"column":6,"nodeType":"145","endLine":30,"endColumn":12,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"147","line":35,"column":11,"nodeType":"137","messageId":"138","endLine":35,"endColumn":23},{"ruleId":"135","severity":1,"message":"148","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":27},{"ruleId":"135","severity":1,"message":"149","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"135","severity":1,"message":"151","line":45,"column":19,"nodeType":"137","messageId":"138","endLine":45,"endColumn":27},{"ruleId":"135","severity":1,"message":"148","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":27},{"ruleId":"135","severity":1,"message":"152","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":12},{"ruleId":"135","severity":1,"message":"149","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"135","severity":1,"message":"153","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":18},{"ruleId":"135","severity":1,"message":"154","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":21},{"ruleId":"135","severity":1,"message":"155","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":15},{"ruleId":"135","severity":1,"message":"156","line":17,"column":5,"nodeType":"137","messageId":"138","endLine":17,"endColumn":15},{"ruleId":"135","severity":1,"message":"157","line":24,"column":12,"nodeType":"137","messageId":"138","endLine":24,"endColumn":17},{"ruleId":"135","severity":1,"message":"158","line":34,"column":11,"nodeType":"137","messageId":"138","endLine":34,"endColumn":34},{"ruleId":"135","severity":1,"message":"152","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":12},{"ruleId":"135","severity":1,"message":"149","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"135","severity":1,"message":"159","line":20,"column":8,"nodeType":"137","messageId":"138","endLine":20,"endColumn":14},{"ruleId":"135","severity":1,"message":"160","line":23,"column":8,"nodeType":"137","messageId":"138","endLine":23,"endColumn":11},{"ruleId":"135","severity":1,"message":"161","line":33,"column":13,"nodeType":"137","messageId":"138","endLine":33,"endColumn":18},{"ruleId":"135","severity":1,"message":"159","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"162","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"135","severity":1,"message":"163","line":13,"column":12,"nodeType":"137","messageId":"138","endLine":13,"endColumn":22},{"ruleId":"143","severity":1,"message":"164","line":24,"column":8,"nodeType":"145","endLine":24,"endColumn":10,"suggestions":"165"},{"ruleId":"135","severity":1,"message":"151","line":61,"column":19,"nodeType":"137","messageId":"138","endLine":61,"endColumn":27},{"ruleId":"135","severity":1,"message":"166","line":44,"column":11,"nodeType":"137","messageId":"138","endLine":44,"endColumn":21},{"ruleId":"135","severity":1,"message":"163","line":10,"column":12,"nodeType":"137","messageId":"138","endLine":10,"endColumn":22},{"ruleId":"135","severity":1,"message":"167","line":10,"column":24,"nodeType":"137","messageId":"138","endLine":10,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":32,"column":21,"nodeType":"170","endLine":32,"endColumn":49},{"ruleId":"135","severity":1,"message":"152","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Game1' is defined but never used.","'Game2' is defined but never used.","'Game3' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'refreshToken' is assigned a value but never used.","'useContext' is defined but never used.","'Cookies' is defined but never used.","'Button' is defined but never used.","'response' is assigned a value but never used.","'Swal' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'KeyIcon' is defined but never used.","'IconButton' is defined but never used.","'email' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","'avatar' is defined but never used.","'api' is defined but never used.","'error' is assigned a value but never used.","'Header' is defined but never used.","'gameResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getScore'. Either include it or remove the dependency array.",["172"],"'handleDrop' is assigned a value but never used.","'setGameResult' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [navigate, user]",{"range":"177","text":"178"},"Update the dependencies array to be: [getScore]",{"range":"179","text":"180"},[935,941],"[navigate, user]",[921,923],"[getScore]"]