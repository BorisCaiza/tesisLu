[{"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js":"1","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js":"2","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js":"3","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js":"4","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js":"5","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js":"6","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js":"7","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js":"8","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js":"9"},{"size":463,"mtime":1697908530990,"results":"10","hashOfConfig":"11"},{"size":1003,"mtime":1697910989541,"results":"12","hashOfConfig":"11"},{"size":5229,"mtime":1697908530923,"results":"13","hashOfConfig":"11"},{"size":5371,"mtime":1697908530955,"results":"14","hashOfConfig":"11"},{"size":3043,"mtime":1697908530939,"results":"15","hashOfConfig":"11"},{"size":5427,"mtime":1697908530955,"results":"16","hashOfConfig":"11"},{"size":480,"mtime":1697908530939,"results":"17","hashOfConfig":"11"},{"size":2578,"mtime":1697908530990,"results":"18","hashOfConfig":"11"},{"size":6713,"mtime":1697923775889,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"z7pusm",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\App.js",["53","54","55","56","57"],[],"import './App.css';\r\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { AuthContext } from './Context/AuthContext';\r\nimport Login from './Pages/Login';\r\nimport Register from './Pages/Register';\r\nimport ForgetPassword from './Pages/ForgetPassword';\r\nimport Games from './Pages/Games/Games';\r\nimport Game1  from './Pages/Games/game1/Game1';\r\n\r\nfunction App() {\r\n\r\n\r\n  const { user } = useContext(AuthContext);\r\n  //const navigate = useNavigate();\r\n\r\n  /*useEffect(() => {\r\n    if (!user) {\r\n      navigate('/');\r\n    }\r\n  }, [user]);*/\r\n\r\n\r\n  return (\r\n\r\n    <Routes>\r\n      <Route index element={<Login />} />\r\n      <Route path='/register' element={<Register />} />\r\n      <Route path='/forgot-password' element={<ForgetPassword />} />\r\n      <Route path='/games' element={<Games />} />\r\n      <Route path='/games/game1' element={<Game1  />} />\r\n\r\n    </Routes>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Context\\AuthContext.js",["58"],[],"import React, { createContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst getUserFromStorage = () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n};\r\n\r\nconst setUserToStorage = (user) => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(getUserFromStorage());\r\n    const [error, setError] = useState('');\r\n    const navigator = useNavigate();\r\n\r\n    const getUser = async () => {\r\n\r\n        await api.get('/user/' + user.id).then(res => {\r\n            if (res.status === 200) {\r\n                return res.data.user;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await api.post('/user/token', {\r\n                token: localStorage.getItem('refreshToken'),\r\n            });\r\n            localStorage.removeItem(\"user-token\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n\r\n            const { token, refreshToken } = response.data;\r\n\r\n            localStorage.setItem('user-token', token);\r\n            localStorage.setItem(\"refreshToken\", refreshToken)\r\n\r\n            const userNew = await getUser();\r\n\r\n            setUser({\r\n                ...user,\r\n                permisos: user.permisos,\r\n                token: token,\r\n                refreshToken: refreshToken,\r\n            });\r\n\r\n            setUserToStorage({\r\n                ...user,\r\n                token: token,\r\n                permisos: userNew?.permisos,\r\n                refreshToken: refreshToken,\r\n            });\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                logout();\r\n            }\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user && user.refreshToken) {\r\n            const refreshTokenInterval = setInterval(refreshToken, 3 * 60 * 1000); // Actualizar el token cada 15 minutos\r\n            return () => {\r\n                clearInterval(refreshTokenInterval);\r\n            };\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        setUserToStorage(user);\r\n    }, [user]);\r\n\r\n    const login = async (values) => {\r\n        try {\r\n            const response = await api.post('/user/login', values);\r\n            console.log(\"responmse\", response.data)\r\n            if (response.status === 200) {\r\n                setUser(response.data);\r\n                setUserToStorage(response.data);\r\n                localStorage.setItem('user-token', response.data.token);\r\n                localStorage.setItem(\"refreshToken\", response.data.refreshToken)\r\n                localStorage.setItem(\"role\", response.data.role)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    iconHtml: '<img src=\"https://www.easy-gst.in/wp-content/uploads/2017/07/success-icon-10.png\" alt=\"Icono personalizado\" width=\"98\">',\r\n                    title: \"Bienvenido!!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                navigator(\"/local\")\r\n            } else {\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n\r\n                setError(error.response.data.message);\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                    title: \"Credenciales Invalidas!!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                setError('Ocurrió un error al iniciar sesión.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await api.post('/user/logout', { refreshToken: user.refreshToken });\r\n            console.log(res);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"user-token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.removeItem(\"role\");\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                user,\r\n                error,\r\n                login,\r\n                logout,\r\n                getUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Register.js",["59","60","61","62","63","64"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\n\r\nexport default function Register() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Registrate</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo y una contraseña</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Registrarse\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/\">Inicia Sesión</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\">contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\ForgetPassword.js",["65","66","67","68","69","70","71","72","73","74"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\n\r\nexport default function ForgetPassword() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Recupera tu contraseña</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Coloca tu correo</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Recuperar\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Login.js",["75","76","77","78","79","80","81"],[],"import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\n\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport {\r\n    IconButton,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport avatar from \"../Images/avataaars.svg\"\r\nimport \"./login.css\"\r\n\r\nfunction Login() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const authSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // Aquí puedes agregar la lógica de autenticación si es necesario\r\n    };\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid-login  background'>\r\n\r\n\r\n            <div className='row justify-content-center'>\r\n\r\n                <div className='col-sm'>\r\n\r\n\r\n\r\n                    <h1 className='title mb-3'>Bienvenidos</h1>\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <Form className=\"Auth-form\">\r\n                            <div className=\"Auth-form-content\">\r\n                                <h3 className=\"Auth-form-title\">Ingresar</h3>\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, width: '100%' }}>\r\n                                    <InputLabel className=\"label-auth\" htmlFor=\"input-with-icon-adornment\">\r\n                                        Correo electrónico\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"input-with-icon-adornment\"\r\n                                        type=\"email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl sx={{ m: 1, width: '100%' }} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <KeyIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <div className=\"d-grid gap-2 mt-3\">\r\n                                    <button onClick={authSubmitHandler} className=\"main-button\">\r\n                                        Ingresar\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"forgot-password text-right mt-2 \"> <a href=\"/register\">Registrate Aquí</a></p>\r\n\r\n                                <p className=\"forgot-password text-right mt-2\">\r\n                                    ¿Olvidaste tu <a href=\"/forgot-password\">contraseña?</a>\r\n                                </p>\r\n                            </div>\r\n                        </Form >\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\Games.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\api\\api.js",[],[],"C:\\Users\\Adrian\\Documents\\GitHub\\tesisLu\\frontend\\src\\Pages\\Games\\game1\\Game1.js",["82"],[],{"ruleId":"83","severity":1,"message":"84","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":2,"column":40,"nodeType":"85","messageId":"86","endLine":2,"endColumn":51},{"ruleId":"83","severity":1,"message":"88","line":3,"column":29,"nodeType":"85","messageId":"86","endLine":3,"endColumn":38},{"ruleId":"83","severity":1,"message":"89","line":3,"column":40,"nodeType":"85","messageId":"86","endLine":3,"endColumn":48},{"ruleId":"83","severity":1,"message":"90","line":15,"column":11,"nodeType":"85","messageId":"86","endLine":15,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":78,"column":8,"nodeType":"93","endLine":78,"endColumn":14,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"95","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"96","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":12},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":15},{"ruleId":"83","severity":1,"message":"98","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"99","line":24,"column":12,"nodeType":"85","messageId":"86","endLine":24,"endColumn":17},{"ruleId":"83","severity":1,"message":"100","line":25,"column":12,"nodeType":"85","messageId":"86","endLine":25,"endColumn":20},{"ruleId":"83","severity":1,"message":"95","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"96","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":12},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":15},{"ruleId":"83","severity":1,"message":"98","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"101","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"102","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":21},{"ruleId":"83","severity":1,"message":"103","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":15},{"ruleId":"83","severity":1,"message":"104","line":17,"column":5,"nodeType":"85","messageId":"86","endLine":17,"endColumn":15},{"ruleId":"83","severity":1,"message":"99","line":24,"column":12,"nodeType":"85","messageId":"86","endLine":24,"endColumn":17},{"ruleId":"83","severity":1,"message":"105","line":34,"column":11,"nodeType":"85","messageId":"86","endLine":34,"endColumn":34},{"ruleId":"83","severity":1,"message":"95","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"96","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":12},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":15},{"ruleId":"83","severity":1,"message":"98","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"106","line":20,"column":8,"nodeType":"85","messageId":"86","endLine":20,"endColumn":14},{"ruleId":"83","severity":1,"message":"99","line":26,"column":12,"nodeType":"85","messageId":"86","endLine":26,"endColumn":17},{"ruleId":"83","severity":1,"message":"100","line":27,"column":12,"nodeType":"85","messageId":"86","endLine":27,"endColumn":20},{"ruleId":"83","severity":1,"message":"107","line":10,"column":12,"nodeType":"85","messageId":"86","endLine":10,"endColumn":22},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'useContext' is defined but never used.","'Swal' is defined but never used.","'Cookies' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'KeyIcon' is defined but never used.","'IconButton' is defined but never used.","'handleMouseDownPassword' is assigned a value but never used.","'avatar' is defined but never used.","'gameResult' is assigned a value but never used.",{"desc":"109","fix":"110"},"Update the dependencies array to be: [refreshToken, user]",{"range":"111","text":"112"},[2334,2340],"[refreshToken, user]"]