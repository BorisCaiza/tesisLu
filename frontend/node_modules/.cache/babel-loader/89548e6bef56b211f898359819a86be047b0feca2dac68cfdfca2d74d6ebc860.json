{"ast":null,"code":"import axios from 'axios';\nimport Swal from 'sweetalert2';\nconst instance = axios.create({\n  baseURL: \"http://localhost:3004/api/\"\n  // baseURL: \"https://workout.virtusproject.online/api/\"\n});\n\ninstance.interceptors.request.use(config => {\n  if (localStorage.getItem('user-token')) {\n    config.headers[\"Authorization\"] = 'Bearer ' + localStorage.getItem('user-token');\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(function (response) {\n  // Cualquier código de estado que esté dentro del rango de 2xx hace que esta función se active\n  return response;\n}, async function (error) {\n  var _error$response;\n  console.log(error);\n  // Cualquier código de estado que esté fuera del rango de 2xx hace que esta función se active\n  const originalConfig = error.config;\n  if (error.code === \"ERR_NETWORK\") {\n    // Aquí puedes redirigir a una página específica cuando se produce un error de red\n    window.location.href = \"/error-page\";\n    return Promise.reject(error);\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) === \"Refresh token is not valid!\") {\n    localStorage.clear();\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: '¡Estuviste inactivo por mucho tiempo!',\n      confirmButtonColor: '#e33084',\n      allowOutsideClick: false,\n      showConfirmButton: true,\n      iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">'\n    }).then(() => {\n      window.location.href = \"/auth/login\";\n    });\n  } else {\n    var _error$response2;\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400) {\n      var _error$response$data;\n      if (((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.status) === false) {\n        var _error$response$data2;\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\n          text: ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Ha ocurrido un error'\n        });\n      } else {\n        return Promise.reject(error.response.data); // Enviar response.data\n      }\n    }\n  }\n\n  originalConfig._retry = true;\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","Swal","instance","create","baseURL","interceptors","request","use","config","localStorage","getItem","headers","error","Promise","reject","response","_error$response","console","log","originalConfig","code","window","location","href","data","clear","fire","icon","title","text","confirmButtonColor","allowOutsideClick","showConfirmButton","iconHtml","then","_error$response2","status","_error$response$data","_error$response$data2","message","_retry"],"sources":["C:/Users/Boris/Documents/GitHub/tesisLu/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:3004/api/\",\r\n   // baseURL: \"https://workout.virtusproject.online/api/\"\r\n});\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        if (localStorage.getItem('user-token')) {\r\n            config.headers[\"Authorization\"] = 'Bearer ' + localStorage.getItem('user-token');\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        // Cualquier código de estado que esté dentro del rango de 2xx hace que esta función se active\r\n        return response;\r\n    },\r\n    async function (error) {\r\n        console.log(error)\r\n        // Cualquier código de estado que esté fuera del rango de 2xx hace que esta función se active\r\n        const originalConfig = error.config;\r\n        if (error.code === \"ERR_NETWORK\") {\r\n            // Aquí puedes redirigir a una página específica cuando se produce un error de red\r\n            window.location.href = \"/error-page\";\r\n            return Promise.reject(error);\r\n        }\r\n\r\n\r\n        if (error.response?.data === \"Refresh token is not valid!\") {\r\n            localStorage.clear();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: '¡Estuviste inactivo por mucho tiempo!',\r\n                confirmButtonColor: '#e33084',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: true,\r\n                iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n            }).then(() => {\r\n                window.location.href = \"/auth/login\";\r\n            });\r\n        } else {\r\n            if (error.response?.status === 400) {\r\n                if (error.response.data?.status === false) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        iconHtml: '<img src=\"https://cdn.icon-icons.com/icons2/317/PNG/512/sign-error-icon_34362.png\" width=\"125\">',\r\n                        text: error.response.data?.message || 'Ha ocurrido un error',\r\n                    });\r\n                } else {\r\n                    return Promise.reject(error.response.data); // Enviar response.data\r\n                }\r\n            }\r\n        }\r\n        originalConfig._retry = true;\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAE9B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAE;EACV;AACH,CAAC,CAAC;;AACFF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAK;EACR,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;IACpCF,MAAM,CAACG,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACpF;EACA,OAAOF,MAAM;AACjB,CAAC,EACAI,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDV,QAAQ,CAACG,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC9B,UAAUQ,QAAQ,EAAE;EAChB;EACA,OAAOA,QAAQ;AACnB,CAAC,EACD,gBAAgBH,KAAK,EAAE;EAAA,IAAAI,eAAA;EACnBC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAClB;EACA,MAAMO,cAAc,GAAGP,KAAK,CAACJ,MAAM;EACnC,IAAII,KAAK,CAACQ,IAAI,KAAK,aAAa,EAAE;IAC9B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;IACpC,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC;EAGA,IAAI,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBQ,IAAI,MAAK,6BAA6B,EAAE;IACxDf,YAAY,CAACgB,KAAK,CAAC,CAAC;IACpBxB,IAAI,CAACyB,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,uCAAuC;MAC7CC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,KAAK;MACxBC,iBAAiB,EAAE,IAAI;MACvBC,QAAQ,EAAE;IACd,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACVb,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;IACxC,CAAC,CAAC;EACN,CAAC,MAAM;IAAA,IAAAY,gBAAA;IACH,IAAI,EAAAA,gBAAA,GAAAvB,KAAK,CAACG,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;MAAA,IAAAC,oBAAA;MAChC,IAAI,EAAAA,oBAAA,GAAAzB,KAAK,CAACG,QAAQ,CAACS,IAAI,cAAAa,oBAAA,uBAAnBA,oBAAA,CAAqBD,MAAM,MAAK,KAAK,EAAE;QAAA,IAAAE,qBAAA;QACvCrC,IAAI,CAACyB,IAAI,CAAC;UACNC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdK,QAAQ,EAAE,iGAAiG;UAC3GJ,IAAI,EAAE,EAAAS,qBAAA,GAAA1B,KAAK,CAACG,QAAQ,CAACS,IAAI,cAAAc,qBAAA,uBAAnBA,qBAAA,CAAqBC,OAAO,KAAI;QAC1C,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAO1B,OAAO,CAACC,MAAM,CAACF,KAAK,CAACG,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;MAChD;IACJ;EACJ;;EACAL,cAAc,CAACqB,MAAM,GAAG,IAAI;EAC5B,OAAO3B,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}